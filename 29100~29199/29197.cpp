// 29197: 아침 태권도
//
// - 문제
// KSA의 1학년 학생들은 매일 아침 졸업을 하기 위해 아침 태권도를 해야 한다.
// 태권도장은 2차원 좌표평면으로 표현할 수 있고, 이때 사범님은 원점에 앉아있다.
// $N$명의 1학년 학생들은 $1$번부터 $N$번까지의 번호로 구분되며, $i$번 학생의 위치는 $(X_i, Y_i)$이다. 태권도 사범님은 $i$번 학생이 다른 학생에게 가려지지 않는 경우에만 볼 수 있다. 즉, 원점과 $(X_i, Y_i)$를 이어 선분을 만들었을 때, 선분 위에 위치한 다른 학생이 아무도 없을 때 사범님은 $i$번 학생을 볼 수 있다.
// 1학년 학생들은 너무 공부를 많이 하여 매우 졸리기 때문에, 사범님에게 보이는 학생들만 태권도를 열심히 한다. 학생들의 위치 정보가 주어졌을 때, 태권도를 열심히 하는 학생들은 몇 명인지 구하시오.
//
// - 입력
// 첫 번째 줄에 정수 $N$이 주어진다.
// $i + 1$번째 줄에 두 정수 $X_i, Y_i$가 공백으로 구분되어 주어진다. $(1 \leq i \leq N)$ 
//
// - 출력
// 태권도를 열심히 하는 학생들은 몇 명인지 출력한다.
//
// - 제한
// $1 \leq N \leq 2 \times 10^5$ 
// $-10^4 \leq X_i, Y_i \leq 10^4$ 
// 모든 $i$에 대해 $(X_i, Y_i) \neq (0, 0)$ 
// $(X_i, Y_i) = (X_j, Y_j)$인 서로 다른 $i$, $j$가 존재하지 않음

#include <bits/stdc++.h>
using namespace std;

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  int n;
  cin >> n;
  set<double> s;
  while (n--) {
    int x, y;
    cin >> x >> y;
    s.insert(atan2(y, x));
  }
  cout << s.size();
  return 0;
}
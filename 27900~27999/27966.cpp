// 27966: △
//
// - 문제
// N개의 정점으로 이루어진 트리의 모든 정점 쌍에 대하여, 두 정점 사이의 거리의 합을 최소화하시오. 정점에는 1부터 N까지 번호가 매겨져 있다.
// 즉, 정점 i와 정점 j 사이의 거리를 \textrm {dist}(i,\, j)라 할 때 \sum_{1 ≤ i < j ≤ N}^{} \textrm {dist}(i,\, j)가 최소인 트리를 구성해야 한다.
//
// - 입력
// 첫째 줄에 정점의 개수 N이 주어진다. (2 ≤ N  ≤ 100\,000)
//
// - 출력
// 첫째 줄에 모든 정점 쌍에 대하여 두 정점 사이 거리의 합의 최솟값을 출력한다.
// 둘째 줄부터 N-1개의 줄에 걸쳐, 트리를 이루는 간선의 정보를 출력한다. 각 줄에 간선이 연결하는 두 정점의 번호를 공백을 사이에 두고 출력한다.
// 조건을 만족하는 트리가 여럿이라면 아무거나 하나 출력한다.

#include <bits/stdc++.h>
using namespace std;

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  long long n;
  cin >> n;
  cout << n - 1 + (n - 2) * (n - 1) << '\n';
  for (long long i = 2; i <= n; i++)
    cout << "1 " << i << '\n';
  return 0;
}
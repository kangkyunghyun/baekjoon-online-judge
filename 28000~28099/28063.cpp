// 28063: 동전 복사
//
// - 문제
// 돈이 없어 슬픈 레이무는 어느 날, 한 기계를 발견했다. 이 기계는 한 변의 길이가 (N)인 정사각형 모양이고, (1 times 1) 크기의 정사각형 칸들로 이루어져 있다. 각 칸의 위치는 좌표로 나타낼 수 있는데, 맨 왼쪽 아래 칸은 ((1, 1))이고, 맨 오른쪽 위 칸은 ((N, N))이다. 처음에는 ((x, y))에 해당하는 칸에만 동전이 놓여있고, 나머지 칸은 비어있다.
// 이때, ((x, y))는 ((1, 1))에서 오른쪽으로 ((x - 1))칸, 위쪽으로 ((y - 1))칸 떨어진 칸을 의미한다.
// 레이무는 상하좌우 중 한 방향으로 기계를 작동할 수 있다. 기계에 존재하는 모든 동전은 기계가 작동한 방향으로 이동하며, 동전이 이동한 경로에는 새로운 동전이 생겨난다. 레이무는 이를 보고, 기계의 모든 칸을 동전으로 채우기로 결심했다.
// 하지만 기계를 작동하는 것은 매우 힘들기 때문에, 레이무는 작동 횟수를 최소화하려 한다. 기계의 한 변의 길이, 동전의 처음 위치가 주어질 때 기계의 모든 칸을 채우기 위한 기계의 최소 작동 횟수를 구하자.다음은 예제 1에 대한 설명이다.
// 처음 ((2, 1))에 동전이 놓여있다. 여기에서 기계를 오른쪽으로 작동하면 다음 그림처럼 된다.
// 여기에서 기계를 위쪽으로 작동하면 다음 그림처럼 된다.
// 기계를 왼쪽으로 작동하면 다음 그림처럼 된다.
// (3) 회의 기계 작동으로 모든 칸을 채웠다. 이 예제에서 (2) 회 이하로 모든 칸을 채울 수는 없고, 답은 (3)이 된다.
//
// - 입력
// 첫 번째 줄에 기계의 한 변의 길이 (N)이 주어진다. ((1 ≤ N ≤ 5 000))
// 두 번째 줄에 동전의 처음 위치 ((x, y))를 나타내는 두 정수 (x, y)가 공백으로 구분되어 주어진다. ((1 ≤ x, y ≤ N)) 
//
// - 출력
// 기계의 최소 작동 횟수를 출력한다.

#include <bits/stdc++.h>
using namespace std;

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  int n, x, y, ans = 0;
  cin >> n >> x >> y;
  if (n == 1)
    ans = 0;
  else if (x == 1 || x == n) {
    if (y == 1 || y == n)
      ans = 2;
    else
      ans = 3;
  } else {
    if (y == 1 || y == n)
      ans = 3;
    else
      ans = 4;
  }
  cout << ans;
  return 0;
}
// 27939: 가지 교배
//
// - 문제
// 키위별의 유전학에 따르면 가지의 교배는 두 가지 서로 다른 방식이 가능하다. 교배란 서로 다른 두 품종으로부터 이전에 존재한 적 없는 하나의 품종을 만들어내는 것이다.
// P-우선 교배: 흰색과 흰색을 교배하면 흰색이 되고, 그 외의 경우는 보라색이다.
// W-우선 교배: 보라색과 보라색을 교배하면 보라색이 되고, 그 외의 경우는 흰색이다.
// 노란색 부분이 두 가지를 교배한 결과를 나타낸다.
// 가지 육종학자 키위는 새 품종을 만들어 보기로 했다. 키위는 우선 기존에 가지고 있던
// n가지 품종의 가지를 많이 준비하여 일정량씩 조수들에게 전부 나눠주고, 조수들이 교배하여 제출한 새 가지만 취합하여 자신이 교배하는 방식으로 일감을 줄이려고 한다. 각 조수가 받는 가지는 품종마다 최대 하나이다. 일반적으로 가지를 육종할 때는 P-우선 교배를 사용하지만, 키위는 흰색 가지를 선호하기 때문에 항상 W-우선 교배를 사용해 오고 있다. 키위의 조수들은 그런 특이 취향이 없기 때문에, 정석적으로 P-우선 교배를 할 것이다. 키위와 조수는 교배해서 나온 품종을 포함하여 품종이 하나만 남을 때까지, 현재 자신이 가지고 있는 품종 둘을 골라 교배하여 새 품종을 얻고, 사용한 품종은 버린다.
// 키위가 조수들에게 나눠준 품종의 목록이 주어졌을 때, 교배 순서를 잘 정해 키위가 교배를 끝마친 후 흰색 가지를 얻을 수 있는지 알아보자.
//
// - 입력
// 첫째 줄에는 가지의 품종 수 n이 주어진다. (2 ≤ n ≤ 1000) 
// 둘째 줄에는 n가지 가지 품종의 색이 알파벳 P 또는 W 중 하나로 주어진다. P는 보라색을, W는 흰색을 의미한다.
// 셋째 줄에는 키위의 조수의 수 m과 각 조수가 가진 품종의 수 k이 주어진다. (2 ≤ m ≤ 1000; 2 ≤ k ≤ n)
// 넷째 줄부터 m개의 줄에 걸쳐, 그중 i째 줄에는 i번 조수가 가진 서로 다른 가지 품종의 번호 a_{ij}가 주어진다. (1 ≤ j ≤ k)
//
// - 출력
// 키위가 만들어낼 가지 품종의 색이 흰색이 될 수 있다면 W를 출력한다. 키위와 조수들이 가지를 어떻게 교배하더라도 결과물이 보라색 가지가 된다면 P를 출력한다.

#include <bits/stdc++.h>
using namespace std;

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  int n, w = 0;
  cin >> n;
  vector<char> v(n);
  for (int i = 0; i < n; i++)
    cin >> v[i];
  int m, k;
  cin >> m >> k;
  for (int i = 0; i < m; i++) {
    int p = 0;
    for (int j = 0; j < k; j++) {
      int x;
      cin >> x;
      if (v[x - 1] == 'P')
        p++;
    }
    if (p == 0)
      w++;
  }
  if (w != 0)
    cout << 'W';
  else
    cout << 'P';
  return 0;
}
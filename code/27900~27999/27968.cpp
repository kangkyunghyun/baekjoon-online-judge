// 27968: 사사의 사차원 사탕 봉지
//
// - 문제
// 사사는 사탕이 무한히 들어있는 사차원 사탕 봉지를 가지고 있다. 사사는 사탕을 먹고 싶어 하는 N명의 아이들에게 순서대로 사탕을 주려고 한다.
// 사사는 손이 작기 때문에 한 번에 많은 사탕을 쥘 수 없어서, 여러 번에 걸쳐 사탕을 꺼내려고 한다. 한 명의 아이가 새로 올 때마다 사사는 사탕을 최대 M번 꺼내며, 꺼낼 때 차례로 A_1개, A_2개, A_3개, \cdots, A_M개씩 꺼낸다. 이때, 사사가 사탕을 꺼낼 땐 반드시 하나 이상을 꺼낸다.
// i번째로 오는 아이는 사탕을 B_i개 받고 싶어 한다.
// i번째 아이에게 사탕을 줄 때, 도중에 꺼낸 사탕 개수의 총합이 B_i개 이상이 되면 그 아이는 사사가 꺼낸 모든 사탕을 받고 떠난다. 만약 M번 사탕을 꺼냈음에도 아이가 원하는 만큼의 사탕을 꺼내지 못한다면, 사사는 그 아이를 쫓아낸다.
// N명의 아이가 원하는 사탕의 개수가 순서대로 주어질 때, 각 아이가 사탕을 받고 떠날 때까지 사사가 사탕을 꺼내야 하는 횟수를 구하시오.
//
// - 입력
// 첫 번째 줄에 아이의 수 N과 사사가 사탕을 꺼내주려고 하는 최대 횟수 M이 공백으로 구분되어 주어진다. (1 ≤ N ≤ 300,000, 1 ≤ M ≤ 300,000)
// 두 번째 줄에 사사가 한 번에 사탕을 꺼내는 횟수 A_1, A_2, \cdots, A_M이 공백으로 구분되어 주어진다. (1 ≤ j ≤ M, 1 ≤ A_j ≤ {10}^9)
// 세 번째 줄부터 N개의 줄에 걸쳐 각 아이가 받고 싶어하는 사탕의 개수 B_1, B_2, \cdots, B_N이 한 줄에 하나씩 주어진다. (1 ≤ i ≤ N, 1 ≤ B_i ≤ {10}^{12})
// 입력으로 주어지는 수는 모두 정수이다.
//
// - 출력
// N개의 줄에 걸쳐, i번째 아이에게 사탕을 원하는 만큼 주기 위해 사사가 사탕을 꺼내야 하는 횟수를 i번째 줄에 출력한다. 만약 사사가 i번째 아이를 쫓아낸다면 i번째 줄에 Go away!를 출력한다.

#include <bits/stdc++.h>
using namespace std;

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  int n, m;
  cin >> n >> m;
  vector<long long> a(m + 1);
  for (int i = 1; i <= m; i++) {
    cin >> a[i];
    a[i] += a[i - 1];
  }
  for (int i = 0; i < n; i++) {
    long long b;
    cin >> b;
    int idx = lower_bound(a.begin(), a.end(), b) - a.begin();
    if (idx > m)
      cout << "Go away!\n";
    else
      cout << idx << '\n';
  }
  return 0;
}